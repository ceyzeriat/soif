# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.

# this is a modified copy of astroplan travis file

language: c

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
##addons:
##    apt:
##        packages:
##            - graphviz
##            - texlive-latex-extra
##            - dvipng
env:
    global:
        # Set defaults to avoid repeating in most cases
        - NUMPY_VERSION=1.9
        - ASTROPY_VERSION=1.0
        - OPTIONAL_DEPS=false

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='setup.py egg_info'
        - PYTHON_VERSION=3.3 SETUP_CMD='setup.py egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='setup.py egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Try MacOS X
        - os: osx
          env: PYTHON_VERSION=2.7 SETUP_CMD='-m pytest' OPTIONAL_DEPS=true

        # Check for sphinx doc build warnings - we do this first because it
        # runs for a long time
        # OPTIONAL_DEPS needed because the plot_directive in sphinx needs them
        ##- os: linux
        ##  env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'  OPTIONAL_DEPS=true
        ##- os: linux
        ##  env: PYTHON_VERSION=3.4 SETUP_CMD='build_sphinx -w'  OPTIONAL_DEPS=true

        # Try all python versions with the latest numpy
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='-m pytest'
        - os: linux
          env: PYTHON_VERSION=3.3 SETUP_CMD='-m pytest'
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='-m pytest'

        # Now try with all optional dependencies on 2.7 and an appropriate 3.x
        # build (with latest numpy). We also note the code coverage on Python
        # 2.7.
##        - os: linux
##          env: PYTHON_VERSION=2.7 SETUP_CMD='test --remote-data -V --coverage' OPTIONAL_DEPS=true
##        - os: linux
##          env: PYTHON_VERSION=3.4 SETUP_CMD='test --remote-data -V' OPTIONAL_DEPS=true

        # Try older numpy versions
##        - os: linux
##          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.8 SETUP_CMD='test -V'
##        - os: linux
##          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7 SETUP_CMD='test -V'
##        - os: linux
##          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.6 SETUP_CMD='test -V'

        # Try developer version of Numpy
##        - os: linux
##          env: PYTHON_VERSION=2.7 NUMPY_VERSION=dev SETUP_CMD='test -V'

##        # Try developer version of Astropy
##        - os: linux
##          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=dev SETUP_CMD='test -V'

        # Do a PEP8 test
##        - os: linux
##          env: PYTHON_VERSION=2.7 MAIN_CMD='pep8 soif --count' SETUP_CMD=''

##    allow_failures:
##      - env: PYTHON_VERSION=2.7 NUMPY_VERSION=dev SETUP_CMD='test -V'
      # TODO: these fail for now ... make them work!
##      - env: PYTHON_VERSION=2.7 MAIN_CMD='pep8 soif --count' SETUP_CMD=''
##      - env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.8 SETUP_CMD='test -V'
##      - env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7 SETUP_CMD='test -V'
##      - env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.6 SETUP_CMD='test -V'


install:
    - source .continuous-integration/travis/setup_environment_$TRAVIS_OS_NAME.sh

script:
    - python $SETUP_CMD

##after_success:
##    - if [[ $SETUP_CMD == 'test --remote-data -V --coverage' ]]; then
##        coveralls --rcfile='soif/tests/coveragerc';
##      fi
